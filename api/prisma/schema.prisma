generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  userType  UserType
  verified  Boolean? @default(false)
}

enum UserType {
  trust
  security
  cyber
  legal
  am
  superAdmin
}

model TrustAcc {
  rowId                      String  @id @default(auto()) @map("_id") @db.ObjectId
  pspId                      String
  bankId                     String
  reportingDate              String
  bankAccNumber              String
  trustAccDrTypeCode         String
  orgReceivingDonation       String  @unique
  sectorCode                 String?
  trustAccIntUtilizedDetails String
  openingBal                 Float
  principalAmount            Float
  interestEarned             Float
  closingBal                 Float
  trustAccInterestUtilized   Float?  @default(0)
}

model TrustAccPlacement {
  rowId                    String @id @default(auto()) @map("_id") @db.ObjectId
  pspId                    String
  reportingDate            String
  trustFundPlacement       String
  trustFundInvMaturityDate String
  catTrustFundInvestedAmt  Float  @default(0)
  interestAmtPerCat        Float  @default(0)
}

model FraudIncident {
  rowId             String         @id @default(auto()) @map("_id") @db.ObjectId
  pspId             String
  reportingDate     String
  subCountyCode     String
  subFraudCode      String
  fraudCategoryFlag String
  victimCategory    String
  victimInfo        String
  dateOfOccurence   String
  numberOfIncidents Int
  amountInvolved    Float          @default(0)
  amountLost        Float          @default(0)
  amountRecovered   Float          @default(0)
  actionTaken       String
  recoveryDetails   RecoveryStatus
}

enum RecoveryStatus {
  Complete
  Incomplete
}

model CounterfeitCurrencyFraud {
  rowId              String @id @default(auto()) @map("_id") @db.ObjectId
  pspId              String
  reportingDate      String
  subCountyCode      String
  agentId            String
  denominationCode   String
  serialNumber       String
  depositorsName     String
  tellersName        String
  dateConfiscated    String
  dateSubmittedToCBK String
  remarks            String
  numberOfPieces     Int
}

model CybersecurityIncident {
  rowId                         String   @id @default(auto()) @map("_id") @db.ObjectId
  pspId                         String
  reportingDate                 String
  incidentNumber                String   @unique
  locationOfAttacker            String
  incidentMode                  String
  datetimeOfIncident            DateTime @default(now())
  lossType                      String
  detailsOfIncident             String
  actionTakenToManageIncident   String
  datetimeOfIncidentResolution  DateTime @default(now())
  actionTakenToMitigateIncident String
  amountInvolved                Float
  amountLost                    Float
}
